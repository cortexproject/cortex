load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = ["notifier.go"],
    importpath = "github.com/prometheus/prometheus/notifier",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/go-kit/kit/log:go_default_library",
        "//vendor/github.com/go-kit/kit/log/level:go_default_library",
        "//vendor/github.com/prometheus/client_golang/prometheus:go_default_library",
        "//vendor/github.com/prometheus/common/model:go_default_library",
        "//vendor/github.com/prometheus/prometheus/config:go_default_library",
        "//vendor/github.com/prometheus/prometheus/discovery:go_default_library",
        "//vendor/github.com/prometheus/prometheus/pkg/labels:go_default_library",
        "//vendor/github.com/prometheus/prometheus/pkg/relabel:go_default_library",
        "//vendor/github.com/prometheus/prometheus/util/httputil:go_default_library",
        "//vendor/golang.org/x/net/context:go_default_library",
        "//vendor/golang.org/x/net/context/ctxhttp:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = ["notifier_test.go"],
    importpath = "github.com/prometheus/prometheus/notifier",
    library = ":go_default_library",
    deps = [
        "//vendor/github.com/prometheus/common/model:go_default_library",
        "//vendor/github.com/prometheus/prometheus/config:go_default_library",
        "//vendor/github.com/prometheus/prometheus/pkg/labels:go_default_library",
        "//vendor/golang.org/x/net/context:go_default_library",
    ],
)
