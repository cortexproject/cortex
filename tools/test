#!/bin/bash -x

set -e

TAGS=
PARALLEL=
TIMEOUT=10m
VERBOSE=
COUNT=1
COVERAGE=false

usage() {
    echo "$0 [-coverage] [-in-container foo] [-timeout 1m] [-v]"
}

while [ $# -gt 0 ]; do
    case "$1" in
        "-v")
            VERBOSE="-v"
            shift 1
            ;;
        "-tags")
            TAGS="$2"
            shift 2
            ;;
        "-timeout")
            TIMEOUT=$2
            shift 2
            ;;
        "-count")
            COUNT=$2
            shift 2
            ;;
        "-coverage")
            COVERAGE=true
            shift 1
            ;;
        *)
            usage
            exit 2
            ;;
    esac
done

TAGS=("${GO_TEST_ARGS[@]}" netgo)
GO_TEST_ARGS=(-tags "${TAGS[@]}" -cpu 4 -timeout "$TIMEOUT" -count "$COUNT")


if [ "$COVERAGE" = true ]; then
  # shellcheck disable=SC2153
  if [ -n "$COVERDIR" ]; then
      coverdir="$COVERDIR"
  else
      coverdir=$(mktemp -d coverage.XXXXXXXXXX)
  fi

  mkdir -p "$coverdir"
fi

fail=0

run_test() {
    local GO_TEST_ARGS_RUN=("${GO_TEST_ARGS[@]}")
    local output
    if  [ "$COVERAGE" = true ] && [ -z "$COVERDIR" ]; then
      output=$(mktemp "$coverdir/unit.XXXXXXXXXX")
      GO_TEST_ARGS_RUN=("${GO_TEST_ARGS_RUN[@]}" -coverprofile=$output)
    fi
    if [ -n "$VERBOSE" ]; then
      GO_TEST_ARGS_RUN=("${GO_TEST_ARGS_RUN[@]}" -v)
    fi
    local START
    local END
    START=$(date +%s)
    if ! go test "${GO_TEST_ARGS_RUN[@]}" ./...; then
        fail=1
    fi
    END=$(date +%s)
    local RUNTIME=$((END - START))
}

run_test

if [ -n "$PARALLEL" ]; then
    wait
fi

if [ "$COVERAGE" = true ] && [ -z "$COVERDIR" ]; then
    cover "$coverdir"/* >profile.cov
    rm -rf "$coverdir"
    go tool cover -html=profile.cov -o=coverage.html
    go tool cover -func=profile.cov | tail -n1
fi

exit $fail
