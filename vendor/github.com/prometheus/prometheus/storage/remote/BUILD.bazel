load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "client.go",
        "codec.go",
        "ewma.go",
        "queue_manager.go",
        "read.go",
        "storage.go",
        "write.go",
    ],
    importpath = "github.com/prometheus/prometheus/storage/remote",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/go-kit/kit/log:go_default_library",
        "//vendor/github.com/go-kit/kit/log/level:go_default_library",
        "//vendor/github.com/gogo/protobuf/proto:go_default_library",
        "//vendor/github.com/golang/snappy:go_default_library",
        "//vendor/github.com/prometheus/client_golang/prometheus:go_default_library",
        "//vendor/github.com/prometheus/common/model:go_default_library",
        "//vendor/github.com/prometheus/prometheus/config:go_default_library",
        "//vendor/github.com/prometheus/prometheus/pkg/labels:go_default_library",
        "//vendor/github.com/prometheus/prometheus/prompb:go_default_library",
        "//vendor/github.com/prometheus/prometheus/relabel:go_default_library",
        "//vendor/github.com/prometheus/prometheus/storage:go_default_library",
        "//vendor/github.com/prometheus/prometheus/util/httputil:go_default_library",
        "//vendor/golang.org/x/net/context/ctxhttp:go_default_library",
        "//vendor/golang.org/x/time/rate:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "client_test.go",
        "codec_test.go",
        "queue_manager_test.go",
        "read_test.go",
    ],
    importpath = "github.com/prometheus/prometheus/storage/remote",
    library = ":go_default_library",
    deps = [
        "//vendor/github.com/prometheus/common/model:go_default_library",
        "//vendor/github.com/prometheus/prometheus/config:go_default_library",
        "//vendor/github.com/prometheus/prometheus/pkg/labels:go_default_library",
        "//vendor/github.com/prometheus/prometheus/prompb:go_default_library",
        "//vendor/github.com/prometheus/prometheus/storage:go_default_library",
    ],
)
