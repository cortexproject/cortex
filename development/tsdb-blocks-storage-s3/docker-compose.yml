version: '3.4'
services:

  consul:
    image: consul
    command: [ "agent", "-dev" ,"-client=0.0.0.0", "-log-level=info" ]
    ports:
      - 8500:8500

  minio:
    image: minio/minio
    command: [ "server", "/data" ]
    environment:
      - MINIO_ACCESS_KEY=cortex
      - MINIO_SECRET_KEY=supersecret
    ports:
      - 9000:9000
    volumes:
      - .data-minio:/data:delegated

  memcached:
    image: memcached:1.6

  configstore:
    image: nginx
    volumes:
      - .data-configstore:/usr/share/nginx/html/private:ro

  prometheus:
    image: prom/prometheus:v2.16.0
    command: ["--config.file=/etc/prometheus/prometheus.yaml"]
    volumes:
      - ./config:/etc/prometheus
    ports:
      - 9090:9090

  jaeger:
    image: jaegertracing/all-in-one
    ports:
      - 16686:16686
      - "14268"

  # Scrape the metrics also with the Grafana agent (useful to test metadata ingestion
  # until metadata remote write is not supported by Prometheus).
  grafana-agent:
    image: grafana/agent:v0.2.0
    command: ["-config.file=/etc/agent-config/grafana-agent.yaml", "-prometheus.wal-directory=/tmp"]
    volumes:
      - ./config:/etc/agent-config
    ports:
      - 9091:9091

  distributor:
    build:
      context:    .
      dockerfile: dev.dockerfile
    image: cortex
    command: ["sh", "-c", "sleep 3 && exec ./dlv exec ./cortex --listen=:18001 --headless=true --api-version=2 --accept-multiclient --continue -- -config.file=./config/cortex.yaml -target=distributor -server.http-listen-port=8001 -server.grpc-listen-port=9001"]
    depends_on:
      - consul
      - minio
    environment:
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
      - JAEGER_TAGS=app=distributor
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1
    ports:
      - 8001:8001
      - 18001:18001
    volumes:
      - ./config:/cortex/config

  ingester-1:
    build:
      context:    .
      dockerfile: dev.dockerfile
    image: cortex
    command: ["sh", "-c", "sleep 3 && exec ./dlv exec ./cortex --listen=:18002 --headless=true --api-version=2 --accept-multiclient --continue -- -config.file=./config/cortex.yaml -target=ingester -server.http-listen-port=8002 -server.grpc-listen-port=9002"]
    depends_on:
      - consul
      - minio
    environment:
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
      - JAEGER_TAGS=app=ingester-1
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1
    ports:
      - 8002:8002
      - 18002:18002
    volumes:
      - ./config:/cortex/config
      - .data-ingester-1:/tmp/cortex-tsdb-ingester:delegated

  ingester-2:
    build:
      context:    .
      dockerfile: dev.dockerfile
    image: cortex
    command: ["sh", "-c", "sleep 3 && exec ./dlv exec ./cortex --listen=:18003 --headless=true --api-version=2 --accept-multiclient --continue -- -config.file=./config/cortex.yaml -target=ingester -server.http-listen-port=8003 -server.grpc-listen-port=9003"]
    depends_on:
      - consul
      - minio
    environment:
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
      - JAEGER_TAGS=app=ingester-2
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1
    ports:
      - 8003:8003
      - 18003:18003
    volumes:
      - ./config:/cortex/config
      - .data-ingester-2:/tmp/cortex-tsdb-ingester:delegated
    
  querier:
    build:
      context:    .
      dockerfile: dev.dockerfile
    image: cortex
    command: ["sh", "-c", "sleep 3 && exec ./dlv exec ./cortex --listen=:18004 --headless=true --api-version=2 --accept-multiclient --continue -- -config.file=./config/cortex.yaml -target=querier -server.http-listen-port=8004 -server.grpc-listen-port=9004"]
    depends_on:
      - consul
      - minio
    environment:
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
      - JAEGER_TAGS=app=querier
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1
    ports:
      - 8004:8004
      - 18004:18004
    volumes:
      - ./config:/cortex/config

  store-gateway-1:
    build:
      context:    .
      dockerfile: dev.dockerfile
    image: cortex
    command: ["sh", "-c", "sleep 3 && exec ./dlv exec ./cortex --listen=:18008 --headless=true --api-version=2 --accept-multiclient --continue -- -config.file=./config/cortex.yaml -target=store-gateway -server.http-listen-port=8008 -server.grpc-listen-port=9008"]
    depends_on:
      - consul
      - minio
    environment:
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
      - JAEGER_TAGS=app=store-gateway-1
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1
    ports:
      - 8008:8008
      - 18008:18008
    volumes:
      - ./config:/cortex/config

  store-gateway-2:
    build:
      context:    .
      dockerfile: dev.dockerfile
    image: cortex
    command: ["sh", "-c", "sleep 3 && exec ./dlv exec ./cortex --listen=:18009 --headless=true --api-version=2 --accept-multiclient --continue -- -config.file=./config/cortex.yaml -target=store-gateway -server.http-listen-port=8009 -server.grpc-listen-port=9009"]
    depends_on:
      - consul
      - minio
    environment:
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
      - JAEGER_TAGS=app=store-gateway-2
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1
    ports:
      - 8009:8009
      - 18009:18009
    volumes:
      - ./config:/cortex/config

  ruler:
    build:
      context:    .
      dockerfile: dev.dockerfile
    image: cortex
    command: ["sh", "-c", "sleep 3 && exec ./dlv exec ./cortex --listen=:18005 --headless=true --api-version=2 --accept-multiclient --continue -- -config.file=./config/cortex.yaml -target=ruler -server.http-listen-port=8005 -server.grpc-listen-port=9005"]
    depends_on:
      - consul
      - minio
    environment:
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
      - JAEGER_TAGS=app=ruler
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1
    ports:
      - 8005:8005
      - 18005:18005
    volumes:
      - ./config:/cortex/config

  compactor:
    build:
      context:    .
      dockerfile: dev.dockerfile
    image: cortex
    command: ["sh", "-c", "sleep 3 && exec ./dlv exec ./cortex --listen=:18006 --headless=true --api-version=2 --accept-multiclient --continue -- -config.file=./config/cortex.yaml -target=compactor -server.http-listen-port=8006 -server.grpc-listen-port=9006"]
    depends_on:
      - consul
      - minio
    environment:
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
      - JAEGER_TAGS=app=compactor
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1
    ports:
      - 8006:8006
      - 18006:18006
    volumes:
      - ./config:/cortex/config

  query-frontend:
    build:
      context:    .
      dockerfile: dev.dockerfile
    image: cortex
    command: ["sh", "-c", "sleep 3 && exec ./dlv exec ./cortex --listen=:18007 --headless=true --api-version=2 --accept-multiclient --continue -- -config.file=./config/cortex.yaml -target=query-frontend -server.http-listen-port=8007 -server.grpc-listen-port=9007 -store.max-query-length=8760h"]
    depends_on:
      - consul
      - minio
    environment:
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
      - JAEGER_TAGS=app=query-frontend
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1
    ports:
      - 8007:8007
      - 18007:18007
    volumes:
      - ./config:/cortex/config

  alertmanager:
    build:
      context:    .
      dockerfile: dev.dockerfile
    image: cortex
    command: ["sh", "-c", "sleep 3 && exec ./dlv exec ./cortex --listen=:18010 --headless=true --api-version=2 --accept-multiclient --continue -- -config.file=./config/cortex.yaml -target=alertmanager -server.http-listen-port=8010 -server.grpc-listen-port=9010"]
    depends_on:
      - consul
      - minio
    ports:
      - 8010:8010
      - 18010:18010
    volumes:
      - ./config:/cortex/config
