load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "curve25519.go",
        "doc.go",
    ] + select({
        "@io_bazel_rules_go//go/platform:darwin_amd64": [
            "const_amd64.h",
            "const_amd64.s",
            "cswap_amd64.s",
            "freeze_amd64.s",
            "ladderstep_amd64.s",
            "mont25519_amd64.go",
            "mul_amd64.s",
            "square_amd64.s",
        ],
        "@io_bazel_rules_go//go/platform:linux_amd64": [
            "const_amd64.h",
            "const_amd64.s",
            "cswap_amd64.s",
            "freeze_amd64.s",
            "ladderstep_amd64.s",
            "mont25519_amd64.go",
            "mul_amd64.s",
            "square_amd64.s",
        ],
        "@io_bazel_rules_go//go/platform:windows_amd64": [
            "const_amd64.h",
            "const_amd64.s",
            "cswap_amd64.s",
            "freeze_amd64.s",
            "ladderstep_amd64.s",
            "mont25519_amd64.go",
            "mul_amd64.s",
            "square_amd64.s",
        ],
        "//conditions:default": [],
    }),
    importpath = "golang.org/x/crypto/curve25519",
    visibility = ["//visibility:public"],
)

go_test(
    name = "go_default_test",
    srcs = ["curve25519_test.go"],
    importpath = "golang.org/x/crypto/curve25519",
    library = ":go_default_library",
)
