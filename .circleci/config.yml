version: 2

workflows:
  version: 2
  test-build-deploy:
    jobs:
    - lint
    - test
    - integration
    - build
    - deploy:
        requires:
        - build
        - test
        - lint
        - integration

jobs:
  lint:
    docker:
    - image: tomwilkie/cortex-build-image:circleci-2.0-c80dbc66f

    working_directory: /go/src/github.com/weaveworks/cortex
    steps:
    - checkout
    - run:
        name: Lint
        command: |
          touch build-image/.uptodate
          make BUILD_IN_CONTAINER=false lint

  test:
    docker:
    - image: tomwilkie/cortex-build-image:circleci-2.0-c80dbc66f

    working_directory: /go/src/github.com/weaveworks/cortex
    steps:
    - checkout
    - run:
        name: Test
        command: |
          touch build-image/.uptodate
          make BUILD_IN_CONTAINER=false test

  integration:
    docker:
    - image: tomwilkie/cortex-build-image:circleci-2.0-c80dbc66f

    working_directory: /go/src/github.com/weaveworks/cortex
    steps:
    - checkout
    - run:
        name: Integration Test
        command: |
          touch build-image/.uptodate
          make BUILD_IN_CONTAINER=false configs-integration-test

  build:
    docker:
    - image: tomwilkie/cortex-build-image:circleci-2.0-c80dbc66f

    working_directory: /go/src/github.com/weaveworks/cortex
    steps:
    - checkout
    - setup_remote_docker

    - run:
        name: Install Docker client
        command: |
          set -x
          VER="17.03.0-ce"
          curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
          tar -xz -C /tmp -f /tmp/docker-$VER.tgz
          mv /tmp/docker/* /usr/bin

    - run:
        name: Build
        command: |
          touch build-image/.uptodate
          make BUILD_IN_CONTAINER=false

  deploy:
    docker:
    - image: tomwilkie/cortex-build-image:circleci-2.0-c80dbc66f

    working_directory: /go/src/github.com/weaveworks/cortex
    steps:
    - checkout
    - setup_remote_docker

    - run:
        name: Install Docker client
        command: |
          set -x
          VER="17.03.0-ce"
          curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
          tar -xz -C /tmp -f /tmp/docker-$VER.tgz
          mv /tmp/docker/* /usr/bin

    - run:
        name: Deploy
        command: |
          docker login -e "$DOCKER_REGISTRY_EMAIL" -u "$DOCKER_REGISTRY_USER" -p "$DOCKER_REGISTRY_PASSWORD"
          if [ -n "$QUAY_PASSWORD" ]; then
            docker login -e '.' -u "$QUAY_USER" -p "$QUAY_PASSWORD" quay.io;
          fi
          ./push-images $NOQUAY
