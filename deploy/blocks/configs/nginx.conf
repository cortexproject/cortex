worker_processes 5; ## Default: 1
error_log /dev/stderr;
pid /tmp/nginx.pid;
worker_rlimit_nofile 8192;

events {
  worker_connections 4096; ## Default: 1024
}

http {
  default_type application/octet-stream;
  # ref: http://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size
  client_max_body_size 1m;
  log_format main '$remote_addr - $remote_user [$time_local] $status '
  '"$request" $body_bytes_sent "$http_referer" '
  '"$http_user_agent" "$http_x_forwarded_for" "$http_x_scope_orgid"';
  access_log /dev/stderr main;
  sendfile on;
  tcp_nopush on;
  resolver kube-dns.kube-system.svc.cluster.local;

  server {
    listen 80;
    proxy_set_header X-Scope-OrgID 0;
    proxy_connect_timeout 300s;
    proxy_send_timeout 300s;
    proxy_read_timeout 300s;
    proxy_http_version 1.1;

    location = /healthz {
      default_type text/html;
      return 200 'alive';
    }

    # Distributor Config
    location = /ring {
      proxy_pass http://distributor.cortex-monitoring-system.svc.cluster.local$request_uri;
    }


    location = /all_user_stats {
      proxy_pass http://distributor.cortex-monitoring-system.svc.cluster.local$request_uri;
    }

    location = /ha_tracker {
      proxy_pass http://distributor.cortex-monitoring-system.svc.cluster.local$request_uri;
    }

    # remote_write path
    location = /api/v1/push {
      proxy_pass http://distributor.cortex-monitoring-system.svc.cluster.local$request_uri;
    }

    location ~ prometheus/api/v1/rules {
      proxy_pass http://ruler.cortex-monitoring-system.svc.cluster.local$request_uri;
    }

    # Query and remote_read path
    location ~ /prometheus/.* {
      proxy_pass http://query-frontend.cortex-monitoring-system.svc.cluster.local$request_uri;
    }

    # Query Config TODO(qc)
    location ~ /api/prom/.* {
      proxy_pass http://query-frontend.cortex-monitoring-system.svc.cluster.local$request_uri;
    }

    # Alertmanager Config
    location ~ /api/prom/alertmanager/.* {
      proxy_pass http://alertmanager-headless.cortex-monitoring-system.svc.cluster.local$request_uri;
    }

    location ~ /api/v1/alerts {
      proxy_pass http://alertmanager-headless.cortex-monitoring-system.svc.cluster.local$request_uri;
    }

    # Ruler Config
    location ~ /api/v1/rules {
      proxy_pass http://ruler.cortex-monitoring-system.svc.cluster.local$request_uri;
    }

    location ~ /multitenant_alertmanager/status {
      proxy_pass http://alertmanager-headless.cortex-monitoring-system.svc.cluster.local$request_uri;
    }

    location ~ /ruler/ring {
      proxy_pass http://ruler.cortex-monitoring-system.svc.cluster.local$request_uri;
    }

    ## New Query frontend APIs as per https://cortexmetrics.io/docs/api/#querier--query-frontend
    location ~ ^prometheus/api/v1/(read|metadata|labels|series|query_range|query) {
      proxy_pass http://query-frontend.cortex-monitoring-system.svc.cluster.local$request_uri;
    }

    location ~ prometheus/api/v1/label/.* {
      proxy_pass http://query-frontend.cortex-monitoring-system.svc.cluster.local$request_uri;
    }
  }
}