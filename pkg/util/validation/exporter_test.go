package validation

import (
	"testing"

	"github.com/prometheus/client_golang/prometheus/testutil"
	"github.com/stretchr/testify/assert"
)

func TestOverridesExporter_noConfig(t *testing.T) {
	limitSupplier := func() map[string]*Limits { return nil }
	exporter := NewOverridesExporter(limitSupplier)

	// With no updated override configurations, there should be no override metrics
	count := testutil.CollectAndCount(exporter, "cortex_overrides")
	assert.Equal(t, 0, count)
}

func TestOverridesExporter_withConfig(t *testing.T) {
	limitSupplier := func() map[string]*Limits {
		cfg := make(map[string]*Limits)
		cfg["user1"] = &Limits{}
		return cfg
	}
	exporter := NewOverridesExporter(limitSupplier)

	// There should be at least a few metrics generated by receiving an override configuration map
	count := testutil.CollectAndCount(exporter, "cortex_overrides")
	assert.Greater(t, count, 0)
}
