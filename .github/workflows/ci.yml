name: CI

on:
  push:
    branches:
      - master
    tags:
  pull_request:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    container: quay.io/cortexproject/build-image:share-traffic-mirroring-with-envoy-2af1da4d8-WIP
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Docker client
        run: |
          set -x
          VER="17.03.0-ce"
          curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
          tar -xz -C /tmp -f /tmp/docker-$VER.tgz
          mv /tmp/docker/* /usr/bin

      - name: Build
        run: |
          touch build-image/.uptodate
          make BUILD_IN_CONTAINER=false

#   integration:
#     name: Integration tests
#     runs-on: ubuntu-latest
#
#     steps:
#       - name: Install Go
#         uses: actions/setup-go@v2
#         with:
#           go-version: 1.13.3
#
#       - name: Checkout code
#         uses: actions/checkout@v2
#
#       - name: Restore cached dependencies
#         uses: actions/cache@v1
#         with:
#           path: ~/go/pkg/mod
#           key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
#
#       - name: Build Cortex Docker images
#         run: make BUILD_IN_CONTAINER=false ./cmd/cortex/.uptodate
#
#       # We download docker images used by integration tests so that all images are available
#       # locally and the download time doesn't account in the test execution time, which is subject
#       # to a timeout.
#       - name: Preload Docker Images
#         run: |
#           docker pull minio/minio:RELEASE.2019-12-30T05-45-39Z
#           docker pull amazon/dynamodb-local:1.11.477
#           docker pull consul:0.9
#           docker pull gcr.io/etcd-development/etcd:v3.4.7
#           docker pull quay.io/cortexproject/cortex:v0.6.0
#           docker pull quay.io/cortexproject/cortex:v0.7.0
#           docker pull quay.io/cortexproject/cortex:v1.0.0
#           docker pull quay.io/cortexproject/cortex:v1.1.0
#           docker pull shopify/bigtable-emulator:0.1.0
#           docker pull rinscy/cassandra:3.11.0
#           docker pull memcached:1.6.1
#           docker pull bouncestorage/swift-aio:55ba4331
#
#       - name: Run integration tests
#         run: |
#           export CORTEX_IMAGE_PREFIX="${IMAGE_PREFIX:-quay.io/cortexproject/}"
#           export CORTEX_IMAGE="${CORTEX_IMAGE_PREFIX}cortex:${CIRCLE_TAG:-$(./tools/image-tag)}"
#           export CORTEX_CHECKOUT_DIR="/home/circleci/.go_workspace/src/github.com/cortexproject/cortex"
#           echo "Running integration tests with image: $CORTEX_IMAGE"
#           go test -tags=requires_docker -timeout 1200s -v -count=1 ./integration/...
#